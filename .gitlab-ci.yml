variables:
  GO_VERSION: 1.21.12

  # Docker
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: "1"
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"

  # Build
  BUILDER_VERSION: "1.0.2"

stages:
  - test
  - prepare
  - build

.rules-template:
  rules:
    - if: $CI_COMMIT_TAG

# Ugly workaround to get docker:dind working
services:
  - name: docker:dind
    alias: docker
    command:
      - /bin/sh
      - -c
      - "update-ca-certificates && dockerd-entrypoint.sh || exit"

# Test the operator
test:
  extends: .rules-template
  stage: test
  image: golang:${GO_VERSION}
  script:
    - cd operator
    - make test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Build the builder image
build_bundle_builder:
  extends: .rules-template
  stage: prepare
  image: docker:cli
  before_script:
    - update-ca-certificates
    - until docker info; do sleep 1; done
    # Docker login
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - |
      if ! docker pull $CI_REGISTRY_IMAGE/builder:$BUILDER_VERSION; then
        # Build and push the builder image
        docker build --build-arg GOLANG_VERSION=$GO_VERSION -f builder.Dockerfile -t $CI_REGISTRY_IMAGE/builder:$BUILDER_VERSION .
        docker push $CI_REGISTRY_IMAGE/builder:$BUILDER_VERSION
      else
        echo "Builder image already exists. Skipping build."
      fi

# Build the operator image
build_image:
  extends: .rules-template
  stage: build
  image: docker:cli
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd operator
    - docker build -t $CI_REGISTRY_IMAGE/operator:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE/operator:$CI_COMMIT_TAG

# Build the operator bundle
build_bundle:
  extends: .rules-template
  stage: build
  image: $CI_REGISTRY_IMAGE/builder:$BUILDER_VERSION
  before_script:
    - update-ca-certificates
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd operator
    - make bundle IMG=$CI_REGISTRY_IMAGE/operator:$CI_COMMIT_TAG VERSION=$CI_COMMIT_TAG
    - docker build -f bundle.Dockerfile -t $CI_REGISTRY_IMAGE/bundle:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE/bundle:$CI_COMMIT_TAG